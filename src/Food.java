/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rapha
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//import java.util.ArrayList;
public class Food extends javax.swing.JFrame {

    /**
     * Creates new form CoffeeShop
     */
    public Food() {
        initComponents();
    }

    DefaultTableModel prod = new DefaultTableModel();
    int sum = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        chkRice = new javax.swing.JRadioButton();
        txtRice = new javax.swing.JSpinner();
        chkBeans = new javax.swing.JRadioButton();
        chkYam = new javax.swing.JRadioButton();
        chkGarri = new javax.swing.JRadioButton();
        chkTea = new javax.swing.JRadioButton();
        txtBeans = new javax.swing.JSpinner();
        txtYam = new javax.swing.JSpinner();
        txtGarri = new javax.swing.JSpinner();
        txtTea = new javax.swing.JSpinner();
        ADD = new javax.swing.JButton();
        REMOVE = new javax.swing.JButton();
        generateTotal = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        myTable = new javax.swing.JTable();
        clear = new javax.swing.JButton();
        txtSum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        clear1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        chkRice.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        chkRice.setText("Rice");
        chkRice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRiceActionPerformed(evt);
            }
        });

        chkBeans.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        chkBeans.setText("Beans");
        chkBeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBeansActionPerformed(evt);
            }
        });

        chkYam.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        chkYam.setText("Yam");
        chkYam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkYamActionPerformed(evt);
            }
        });

        chkGarri.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        chkGarri.setText("Garri");

        chkTea.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        chkTea.setText("Tea");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(chkTea)
                        .addGap(181, 181, 181)
                        .addComponent(txtTea, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(chkGarri)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGarri, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(chkYam)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtYam, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(chkRice)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRice, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(chkBeans)
                            .addGap(168, 168, 168)
                            .addComponent(txtBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkRice, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRice, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBeans, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkYam, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYam, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGarri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkGarri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkTea, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTea, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        ADD.setBackground(new java.awt.Color(51, 51, 51));
        ADD.setForeground(new java.awt.Color(255, 255, 255));
        ADD.setText("ADD");
        ADD.setToolTipText("Add item to cart");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });

        REMOVE.setBackground(new java.awt.Color(51, 51, 51));
        REMOVE.setForeground(new java.awt.Color(255, 255, 255));
        REMOVE.setText("REMOVE");
        REMOVE.setToolTipText("Remove item from cart");
        REMOVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REMOVEActionPerformed(evt);
            }
        });

        generateTotal.setBackground(new java.awt.Color(51, 51, 51));
        generateTotal.setForeground(new java.awt.Color(255, 255, 255));
        generateTotal.setText("GENERATE TOTAL");
        generateTotal.setToolTipText("Get the sum of all items in your cart");
        generateTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateTotalActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(51, 51, 51));
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("EXIT");
        exit.setToolTipText("Exit the app");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 0, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FOOD ORDERING APPLICATION");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        myTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        myTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT", "QTY", "PRICE", "TOTAL"
            }
        ));
        jScrollPane2.setViewportView(myTable);

        clear.setBackground(new java.awt.Color(51, 51, 51));
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("CLEAR");
        clear.setToolTipText("clear all items on the table");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        jLabel2.setText("Total");

        clear1.setBackground(new java.awt.Color(51, 51, 51));
        clear1.setForeground(new java.awt.Color(255, 255, 255));
        clear1.setText("PRINT INVOICE");
        clear1.setToolTipText("Print Invoice");
        clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ADD)
                        .addGap(18, 18, 18)
                        .addComponent(REMOVE)
                        .addGap(18, 18, 18)
                        .addComponent(generateTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clear)
                        .addGap(18, 18, 18)
                        .addComponent(clear1)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSum, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(exit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADD)
                    .addComponent(REMOVE)
                    .addComponent(generateTotal)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear)
                    .addComponent(txtSum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(clear1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void chkYamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkYamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkYamActionPerformed

    private void chkRiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRiceActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);

    }//GEN-LAST:event_exitActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        // TODO add your handling code here:

        /*
// Define a map to store item names and their corresponding prices
        Map<String, Integer> itemPrices = new HashMap<>();
        itemPrices.put("Rice", 200);
        itemPrices.put("Garri", 120);
        itemPrices.put("Beans", 150);
        itemPrices.put("Yam", 300);
        itemPrices.put("Tea", 300);

// Create a list of selected items
        List<String> selectedItems = new ArrayList<>();
        if (chkRice.isSelected()) {
            selectedItems.add("Rice");
        }
        if (chkGarri.isSelected()) {
            selectedItems.add("Garri");
        }
        if (chkBeans.isSelected()) {
            selectedItems.add("Beans");
        }
        if (chkYam.isSelected()) {
            selectedItems.add("Yam");
        }
        if (chkTea.isSelected()) {
            selectedItems.add("Tea");
        }


// Loop through the selected items and add rows for each item
        for (String itemName : selectedItems) {
            int quantity = Integer.parseInt(txtRice.getValue().toString()); // Default value
            switch (itemName) {
                case "Rice" ->
                    quantity = Integer.parseInt(txtRice.getValue().toString());
                case "Garri" ->
                    quantity = Integer.parseInt(txtGarri.getValue().toString());
                case "Beans" ->
                    quantity = Integer.parseInt(txtBeans.getValue().toString());
                case "Yam" ->
                    quantity = Integer.parseInt(txtYam.getValue().toString());
                case "Tea" ->
                    quantity = Integer.parseInt(txtTea.getValue().toString());
            }


        }*/
        //Changed code
        DefaultTableModel model = (DefaultTableModel) myTable.getModel();
        int itemCount = 0;

        if (chkRice.isSelected()) {
            itemCount += 1;
            String itemName = "Rice";
            int price, quantity, total;
            price = 200;
            quantity = Integer.parseInt(txtRice.getValue().toString());
            total = price * quantity;
            if (quantity > 0) {
                model.addRow(new Object[]{itemName, quantity, price, total});
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred, quantity cannot be zero", "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(WIDTH);
            }
        }
        if (chkBeans.isSelected()) {
            itemCount += 1;
            String itemName = "Beans";
            int price, quantity, total;
            price = 120;
            quantity = Integer.parseInt(txtBeans.getValue().toString());
            total = price * quantity;
            if (quantity > 0) {
                model.addRow(new Object[]{itemName, quantity, price, total});
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred, quantity cannot be zero", "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(WIDTH);
            }
        }
        if (chkYam.isSelected()) {
            itemCount += 1;
            String itemName = "Yam";
            int price, quantity, total;
            price = 150;
            quantity = Integer.parseInt(txtYam.getValue().toString());
            total = price * quantity;
            if (quantity > 0) {
                model.addRow(new Object[]{itemName, quantity, price, total});
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred, quantity cannot be zero", "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(WIDTH);
            }
        }
        if (chkGarri.isSelected()) {
            itemCount += 1;
            String itemName = "Garri";
            int price, quantity, total;
            price = 300;
            quantity = Integer.parseInt(txtGarri.getValue().toString());
            total = price * quantity;
            if (quantity > 0) {
                model.addRow(new Object[]{itemName, quantity, price, total});
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred, quantity cannot be zero", "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(WIDTH);
            }
        }
        if (chkTea.isSelected()) {
            itemCount += 1;
            String itemName = "Tea";
            int price, quantity, total;
            price = 450;
            quantity = Integer.parseInt(txtTea.getValue().toString());
            total = price * quantity;
            if (quantity > 0) {
                model.addRow(new Object[]{itemName, quantity, price, total});
            } else {
                JOptionPane.showMessageDialog(this, "An error occurred, quantity cannot be zero", "Error", JOptionPane.ERROR_MESSAGE);
                System.exit(WIDTH);
            }
        }
    }//GEN-LAST:event_ADDActionPerformed

    private void generateTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateTotalActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) myTable.getModel();
        int tableRowCount = model.getRowCount();
        for (int i = 0; i < tableRowCount; i++) {
            sum += Integer.parseInt(model.getValueAt(i, 3).toString());
        }
        txtSum.setText("₦" + Integer.toString(sum));
    }//GEN-LAST:event_generateTotalActionPerformed

    private void REMOVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REMOVEActionPerformed
        // TODO add your handling code here:
        sum *= 0;
        txtSum.setText("₦" + Integer.toString(sum));
        prod = (DefaultTableModel) myTable.getModel();
        int rowCount = prod.getRowCount();
        if (rowCount > 0) {
            prod.removeRow(rowCount - 1);
        } else {
            JOptionPane.showMessageDialog(this, "An error occurred, Cannot remove zero row", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_REMOVEActionPerformed

    private void chkBeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBeansActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBeansActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling co3de here:
        DefaultTableModel model = (DefaultTableModel) myTable.getModel();
        model.setRowCount(0);
        txtSum.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear1ActionPerformed
        // TODO add your handling code here:
        String customerName = JOptionPane.showInputDialog(this,"Enter Your Name");
        String customerAddress = JOptionPane.showInputDialog(this,"Enter Your Address");
        double CardNum = Math.floor(Math.random() * 16);
//        String customerName = JOptionPane.showInputDialog(this,"Enter Your Name");
//        String customerName = JOptionPane.showInputDialog(this,"Enter Your Name");
    }//GEN-LAST:event_clear1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Food.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Food().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JButton REMOVE;
    private javax.swing.JRadioButton chkBeans;
    private javax.swing.JRadioButton chkGarri;
    private javax.swing.JRadioButton chkRice;
    private javax.swing.JRadioButton chkTea;
    private javax.swing.JRadioButton chkYam;
    private javax.swing.JButton clear;
    private javax.swing.JButton clear1;
    private javax.swing.JButton exit;
    private javax.swing.JButton generateTotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable myTable;
    private javax.swing.JSpinner txtBeans;
    private javax.swing.JSpinner txtGarri;
    private javax.swing.JSpinner txtRice;
    private javax.swing.JTextField txtSum;
    private javax.swing.JSpinner txtTea;
    private javax.swing.JSpinner txtYam;
    // End of variables declaration//GEN-END:variables
}
